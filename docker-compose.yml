---
version: "2.1"
services:
  #Elasticsearch container
  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}"
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "http://localhost:9200/_cat/health"]
    ports:
      - 9200:9200
      - 9300:9300

    networks:
      - elk-stack


  #Kibana container
  kibana:
    container_name: kibana
    hostname: kibana
    image: "docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}"
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - elk-stack
    depends_on:
        elasticsearch: { condition: service_healthy }



  logstash:
    container_name: logstash
    hostname: logstash
    image: "docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}"
    volumes:
      - ./config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./config/logstash/pipeline:/usr/share/logstash/config/conf.d
      - ./config/logstash/pipeline.yml:/usr/share/logstash/config/pipeline.yml
      - ./config/logstash/samplelog.log:/usr/share/logstash/samplelog.log
    ports:
      - "5400:5400"
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    networks:
      - elk-stack
    depends_on:
        elasticsearch: { condition: service_healthy }


volumes:
  esdata:
    driver: local

networks:
  elk-stack:
    driver: bridge

